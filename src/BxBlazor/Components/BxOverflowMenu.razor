@inject IJSRuntime js

<div data-overflow-menu role="menu" tabindex="0" aria-label="Overflow menu description" class="@prefix--overflow-menu">
    <svg focusable="false" preserveAspectRatio="xMidYMid meet" style="will-change: transform;" xmlns="http://www.w3.org/2000/svg" class="@prefix--overflow-menu__icon" width="16" height="16" viewBox="0 0 16 16" aria-hidden="true"><circle cx="8" cy="3" r="1"></circle><circle cx="8" cy="8" r="1"></circle><circle cx="8" cy="13" r="1"></circle></svg>
    <ul class="@prefix--overflow-menu-options @prefix--overflow-menu--flip">
        @foreach (var item in Items)
        {
            <li class="@prefix--overflow-menu-options__option @prefix--table-row--menu-option">
                <button class="@prefix--overflow-menu-options__btn" @onclick="() => item.Value()">
                    <div class="@prefix--overflow-menu-options__option-content">
                        <svg focusable="false" preserveAspectRatio="xMidYMid meet" style="will-change: transform;" xmlns="http://www.w3.org/2000/svg" width="16" height="16" viewBox="0 0 16 16" aria-hidden="true"><path d="M1 13H15V14H1zM12.7 4.5c.4-.4.4-1 0-1.4 0 0 0 0 0 0l-1.8-1.8c-.4-.4-1-.4-1.4 0 0 0 0 0 0 0L2 8.8V12h3.2L12.7 4.5zM10.2 2L12 3.8l-1.5 1.5L8.7 3.5 10.2 2zM3 11V9.2l5-5L9.8 6l-5 5H3z"></path></svg> @(item.Key)
                    </div>
                </button>
            </li>
        }
    </ul>
</div>

@code {
    [Parameter]
    public string prefix { get; set; }

    [Parameter]
    public Dictionary<string, Action> Items { get; set; }

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if(firstRender)
        {
            await js.InvokeVoidAsync("InitComponent", "OverflowMenu");
        }
        await base.OnAfterRenderAsync(firstRender);
    }
}
